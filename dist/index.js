"use strict";var A=function(u,a){return function(){return a||u((a={exports:{}}).exports,a),a.exports}};var N=A(function(L,R){"use strict";function C(u,a,s,i,p,w,o,m,n){var f,l,d,y;for(f=w,d=0;d<u;d++){for(l=n,y=0;y<a&&s[f+y*p]===o[l];y++)l+=m;if(y===a)return d;f+=i}return-1}R.exports=C});var B=A(function(Q,U){"use strict";var k=require("@stdlib/assert-is-nonnegative-integer").isPrimitive,S=require("@stdlib/assert-is-positive-integer"),F=require("@stdlib/assert-is-integer").isPrimitive,z=require("@stdlib/assert-is-function-array"),P=require("@stdlib/assert-is-function"),j=require("@stdlib/assert-is-collection"),t=require("@stdlib/string-format"),D=require("@stdlib/math-base-special-abs"),G=N();function H(u,a,s,i,p,w){var o,m,n,f,l,d;if(P(u))d=u;else if(!z(u))throw new TypeError(t("invalid argument. First argument must be either a function or an array of functions. Value: `%s`.",u));if(!j(a))throw new TypeError(t("invalid argument. Second argument must be an array-like object. Value: `%s`.",a));if(!j(s)&&s!==null)throw new TypeError(t("invalid argument. Third argument must be an array-like object or null. Value: `%s`.",s));if(!S(i))throw new TypeError(t("invalid argument. Fourth argument must be a positive integer. Value: `%s`.",i));if(!k(p))throw new TypeError(t("invalid argument. Fifth argument must be a nonnegative integer. Value: `%s`.",p));if(!k(w))throw new TypeError(t("invalid argument. Sixth argument must be a nonnegative integer. Value: `%s`.",w));if(n=p+w,n===0)throw new Error("invalid arguments. Interface must accept at least one strided input and/or output array. Based on the provided arguments, `nin+nout` equals `0`.");if(d){if(f=a.length/n,!F(f))throw new Error("invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.")}else if(f=u.length,a.length!==f*n)throw new Error("invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.");if(s&&s.length!==f)throw new Error("invalid argument. The third argument must have the same number of elements as the first argument.");if(n*3+2===i)m=!1;else if(n*4+2===i)m=!0;else throw new Error("invalid argument. Fourth argument is incompatible with the number of strided input and output arrays.");return m?o=4:o=3,l=p*o+1,y;function y(){var v,x,V,h,O,q,c,b,g,E,r,T,e,I;if(c=arguments.length,c!==i){if(c<i)throw new Error("invalid invocation. Insufficient arguments.");if(c===i+1)c-=1,V=arguments[c];else throw new Error("invalid invocation. Too many arguments.")}if(E=arguments[0],!F(E))throw new TypeError(t("invalid argument. First argument must be an integer. Value: `%s`.",E));if(q=[E],b=arguments[c-1],!P(b))throw new TypeError(t("invalid argument. Callback argument must be a function. Value: `%s`.",b));for(O=[],e=1;e<i;e+=o)O.push(arguments[e]);for(v=[],e=3;e<i;e+=o){if(r=arguments[e],!F(r))throw e<l?new TypeError(t("invalid argument. Input array stride must be an integer. Value: `%s`.",r)):new TypeError(t("invalid argument. Output array stride must be an integer. Value: `%s`.",r));v.push(r)}if(m)for(x=[],e=4;e<i;e+=o){if(r=arguments[e],!k(r))throw e<l?new TypeError(t("invalid argument. Input array offset must be a nonnegative integer. Value: `%s`.",r)):new TypeError(t("invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.",r));x.push(r)}for(h=[],e=2;e<i;e+=o){if(r=arguments[e],!j(r))throw e<l?new TypeError(t("invalid argument. Input array must be an array-like object. Value: `%s`.",r)):new TypeError(t("invalid argument. Output array must be an array-like object. Value: `%s`.",r));if(I=(e-2)/o,m){if(g=x[I]+(E-1)*v[I],E>0&&(g<0||g>=r.length))throw e<l?new RangeError("invalid argument. Input array has insufficient elements based on the associated stride and the number of indexed elements."):new RangeError("invalid argument. Output array has insufficient elements based on the associated stride and the number of indexed elements.")}else if((E-1)*D(v[I])>=r.length)throw e<l?new RangeError("invalid argument. Input array has insufficient elements based on the associated stride and the number of indexed elements."):new RangeError("invalid argument. Output array has insufficient elements based on the associated stride and the number of indexed elements.");h.push(r)}if(g=G(f,n,a,n,1,0,O,1,0),g<0)throw new TypeError("invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.");if(d?T=d:T=u[g],s?m?T(h,q,v,x,s[g],b,V):T(h,q,v,s[g],b,V):m?T(h,q,v,x,b,V):T(h,q,v,b,V),w===1)return h[n-1];if(w!==0)return h.slice(p)}}U.exports=H});var J=B();module.exports=J;
/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
